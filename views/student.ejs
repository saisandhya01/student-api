<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Details API</title>
    <style>
        * {
            padding: 0;
            margin: 0;
        }

        .hide {
            display: none;
        }

        .show {
            display: block;
        }

        body>div {
            margin: 10px;
            border: 1px solid black;
            padding: 10px;
        }
    </style>
</head>

<body>
    <div class="search" id="search-table">
        <p>Search for roll number</p>
        <input type="text" name="search" id="search-input">
        <div id="match-list"></div>
        <button id="search-submit">SEARCH</button>
    </div>
    <div id="search-dept">
        <p>Search for department</p>
        <input type="number" name="dept" id="search-dept-input">
        <div id="match-list-dept"></div>
    </div>
    <div class="add">
        <button id="add-instruction">Add a new roll number</button>
        <div class="hide" id="add-details">
            <lable for="add-roll-number">Roll Number: </lable>
            <input id="add-roll-number" name="roll-no">
            <lable for="add-name">Name of the student: </lable>
            <input id="add-name" name="name">
            <lable for="add-dept">Department: </lable>
            <input id="add-dept" name="dept">
            <button id="add">ADD</button>
        </div>
    </div>
    <div class="update">
        <button id="update-instruction">Update Student Details</button>
        <div class="hide" id="update-details">
            <lable for="update-roll-number">Roll Number: </lable>
            <input id="update-roll-number" name="roll-no">
            <lable for="update-name">Name of the student: </lable>
            <input id="update-name" name="name">
            <lable for="update-dept">Department: </lable>
            <input id="update-dept" name="dept">
            <button id="update">UPDATE</button>
        </div>
    </div>
    <div class="delete">
        <button id="delete-instruction">Delete a record</button>
        <div class="hide" id="delete-details">
            <lable for="delete-roll-number">Roll no: </lable>
            <input id="delete-roll-number" name="roll-no">
            <button id="delete">DELETE</button>
        </div>
    </div>
    <script>
        let addButton = document.getElementById('add-instruction');
        let addDetails = document.getElementById('add-details');
        let addToTable = document.getElementById('add');
        let add = document.querySelector('.add');
        addButton.onclick = () => {
            addDetails.classList.toggle('show')
        }
        addToTable.onclick = () => {
            let rollno = document.getElementById('add-roll-number').value;
            let name = document.getElementById('add-name').value;
            let dept = document.getElementById('add-dept').value
            if (rollno && name && dept) {
                console.log(rollno, name)
                if (rollno.length === 9 && name.length >= 3) {
                    checkRecordIsPresent(rollno, name, dept, 'POST')
                    if (document.getElementById('error-message-add')) {
                        document.getElementById('error-message-add').innerHTML = ''
                    }
                }
                else {
                    if (document.getElementById('error-message-add')) {
                        document.getElementById('error-message-add').innerHTML = 'Please provide the correct details!'
                    }
                    else {
                        let msg = document.createElement('div');
                        msg.id = 'error-message-add';
                        msg.innerHTML = `Please provide the correct details!`;
                        add.appendChild(msg)

                    }
                }
            }
            else {
                if (!document.getElementById('error-message-add')) {
                    let msg = document.createElement('div');
                    msg.id = 'error-message-add';
                    msg.innerHTML = `Please provide the student's name and roll number`;
                    add.appendChild(msg)
                }
            }
        }
        function sendDetailsToServer(rollno, name, dept) {
            const studentDetails = {
                name: name,
                rollno: rollno,
                dept: dept
            }
            var xhr = new window.XMLHttpRequest();
            xhr.open('POST', '/add', true)
            xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8')
            xhr.send(JSON.stringify(studentDetails));
            let msg = document.createElement('div');
            msg.className = 'success-message-add';
            msg.innerHTML = `Successfully Added!`;
            add.appendChild(msg)

        }
        let updateButton = document.getElementById('update-instruction');
        let updateDetails = document.getElementById('update-details');
        let updateInTable = document.getElementById('update');
        let update = document.querySelector('.update');
        updateButton.onclick = () => {
            updateDetails.classList.toggle('show')
        }
        updateInTable.onclick = () => {
            let rollno = document.getElementById('update-roll-number').value;
            let name = document.getElementById('update-name').value;
            let dept = document.getElementById('update-dept').value;
            if (rollno && name && dept) {
                console.log(rollno, name)
                if (rollno.length === 9 && name.length >= 3) {
                    checkRecordIsPresent(rollno, name, dept, 'PUT')
                    if (document.getElementById('error-message-update')) {
                        document.getElementById('error-message-update').innerHTML = ''
                    }
                }
                else {
                    if (document.getElementById('error-message-update')) {
                        document.getElementById('error-message-update').innerHTML = 'Please provide the correct details!'
                    }
                    else {
                        let msg = document.createElement('div');
                        msg.id = 'error-message-update';
                        msg.innerHTML = `Please provide the correct details!`;
                        update.appendChild(msg)

                    }
                }
            }
            else {
                if (!document.getElementById('error-message-update')) {
                    let msg = document.createElement('div');
                    msg.id = 'error-message-update';
                    msg.innerHTML = `Please provide the student's name and roll number`;
                    update.appendChild(msg)
                }
            }
        }
        function updateDetailsInServer(rollno, name, dept) {
            const studentDetails = {
                name: name,
                rollno: rollno,
                dept: dept
            }
            var xhr = new window.XMLHttpRequest();
            xhr.open('PUT', '/update', true)
            xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8')
            xhr.send(JSON.stringify(studentDetails));
            let msg = document.createElement('div');
            msg.className = 'success-message-update';
            msg.innerHTML = `Successfully updated!`;
            update.appendChild(msg)

        }
        let deleteButton = document.getElementById('delete-instruction');
        let deleteDetails = document.getElementById('delete-details');
        let deleteInTable = document.getElementById('delete');
        let deletei = document.querySelector('.delete');
        deleteButton.onclick = () => {
            deleteDetails.classList.toggle('show')
        }
        deleteInTable.onclick = () => {
            let rollno = document.getElementById('delete-roll-number').value;
            if (rollno) {
                console.log(rollno)
                if (rollno.length === 9) {
                    checkRecordIsPresent(rollno, '', '', 'DELETE')
                    if (document.getElementById('error-message-delete')) {
                        document.getElementById('error-message-delete').innerHTML = ''
                    }
                }
                else {
                    if (document.getElementById('error-message-delete')) {
                        document.getElementById('error-message-delete').innerHTML = 'Please provide the correct details!'
                    }
                    else {
                        let msg = document.createElement('div');
                        msg.id = 'error-message-delete';
                        msg.innerHTML = `Please provide the correct details!`;
                        deletei.appendChild(msg)

                    }
                }
            }
            else {
                if (!document.getElementById('error-message-delete')) {
                    let msg = document.createElement('div');
                    msg.id = 'error-message-delete';
                    msg.innerHTML = `Please provide the student's roll no.`;
                    deletei.appendChild(msg)
                }
            }
        }
        function checkRecordIsPresent(rollno, name, dept, method) {
            console.log(rollno, name, method)
            fetch(`/number/${rollno}`)
                .then(response => response.text())
                .then(data => {
                    console.log(data)
                    if (method === 'DELETE') {
                        if (data === 'yes') {
                            deleteRecord(rollno)
                        }
                        else {
                            let msg = document.createElement('div');
                            msg.className = 'success-message-delete';
                            msg.innerHTML = `Record does not exist`;
                            deletei.appendChild(msg)

                        }
                    }
                    else if (method === 'POST') {
                        if (data === 'yes') {
                            let msg = document.createElement('div');
                            msg.className = 'success-message-add';
                            msg.innerHTML = `Record already exists`;
                            add.appendChild(msg)

                        }
                        else {
                            sendDetailsToServer(rollno, name, dept)
                        }
                    }
                    else if (method === 'PUT') {
                        if (data === 'yes') {
                            updateDetailsInServer(rollno, name)
                        }
                        else {
                            let msg = document.createElement('div');
                            msg.className = 'success-message-update';
                            msg.innerHTML = `Record does not exist`;
                            update.appendChild(msg)
                        }
                    }
                })

        }
        function deleteRecord(rollno) {
            const studentDetails = {
                rollno: rollno
            }
            var xhr = new window.XMLHttpRequest();
            xhr.open('DELETE', '/delete', true)
            xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8')
            xhr.send(JSON.stringify(studentDetails));
            let msg = document.createElement('div');
            msg.className = 'success-message-delete';
            msg.innerHTML = `Successfully deleted!`;
            deletei.appendChild(msg)

        }
        let search = document.getElementById('search-input')
        let matchList = document.getElementById('match-list')
        search.addEventListener('input', () => {
            searchDetails(search.value)
        })
        function searchDetails(value) {
            fetch(`/details/${value}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    addHTML(data, value)
                })
        }
        function isNumeric(n) {
            return !isNaN(parseFloat(n)) && isFinite(n);
        }
        function addHTML(result, value) {
            matchList.innerHTML = '';
            if (result.length === 0) {
                matchList.innerHTML = 'No results found';
            }
            else {
                for (let i = 0; i < result.length; i++) {
                    let p = document.createElement('p')
                    p.style.cursor = 'pointer'
                    if (isNumeric(value)) {
                        p.innerHTML = `${result[i].rollno}`
                    }
                    else {
                        p.innerHTML = `${result[i].name}`
                    }
                    p.onclick = () => {
                        search.value = p.innerHTML;
                        matchList.innerHTML = '';
                    }
                    matchList.appendChild(p)
                }
            }
        }
        let searchSubmit = document.getElementById('search-submit')
        searchSubmit.onclick = () => {
            let value = search.value
            if (isNumeric(value)) {
                searchByNumber(value);
            }
            else {
                searchByName(value);
            }
        }
        function searchByNumber(value) {
            fetch(`/get/num/${value}`)
                .then(response => response.json())
                .then(data => {
                    displaySearchResults(data)
                })
        }
        function searchByName(value) {
            fetch(`/get/name/${value}`)
                .then(response => response.json())
                .then(data => {
                    displaySearchResults(data)
                })
        }
        function displaySearchResults(result) {
            let searchArea = document.getElementById('search-table')
            if (document.getElementById('search-result')) {
                document.getElementById('search-result').innerHTML = '';
            }
            else {
                let div = document.createElement('div');
                div.id = 'search-result'
                searchArea.appendChild(div)
            }
            let wrappingDiv = document.getElementById('search-result')
            let p = document.createElement('p')
            p.innerHTML = `Name of the student: ${result.name}`
            wrappingDiv.appendChild(p)
            let p1 = document.createElement('p')
            p1.innerHTML = `Roll no: ${result.rollno}`
            wrappingDiv.appendChild(p1)
            let p2 = document.createElement('p')
            p2.innerHTML = `Department: ${result.dept}`
            wrappingDiv.appendChild(p2)
        }
        let searchDept = document.getElementById('search-dept-input')
        let matchListDept = document.getElementById('match-list-dept')
        searchDept.addEventListener('input', () => {
            searchDeptFunction(searchDept.value)
        })
        function searchDeptFunction(value) {
            fetch(`/dept/${value}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    if (data.length === 0) {
                        matchListDept.innerHTML = 'No department found!'
                    }
                    else {
                        addDeptHTML(data);
                    }
                })
        }
        function addDeptHTML(result) {
            for (let i = 0; i < result.length; i++) {
                let p = document.createElement('p')
                p.innerHTML = result[i].dept
                matchListDept.appendChild(p)
            }
        }
    </script>
</body>

</html>